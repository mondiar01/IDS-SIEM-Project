name: Convert Documentation
on:
  push:
    branches:
      - main
      - develop
      - feature/*
  pull_request:
    branches:
      - main
      - develop

jobs:
  convert-documents:
    runs-on: ubuntu-latest
    
    # Spécifier Node.js 20
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4  # Mise à jour vers v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4  # Mise à jour vers v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install Pandoc and LaTeX dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pandoc \
            texlive-xetex \
            texlive-fonts-recommended \
            texlive-lang-french \
            texlive-latex-extra \
            lmodern

      - name: Create output directories
        run: |
          mkdir -p results/pdf
          mkdir -p results/word

      - name: Prepare files
        run: |
          mkdir -p temp
          find . -name "*.md" -exec cp {} temp/ \;
          cp -r docs/images temp/
          for file in temp/*.md; do
            sed -i 's|/docs/images/|images/|g' "$file"
            sed -i 's|\[Architecture du Projet\](docs/images/|[Architecture du Projet](images/|g' "$file"
          done

      - name: Convert MD to PDF and DOCX
        working-directory: temp
        run: |
          for file in *.md; do
            if [ -f "$file" ]; then
              filename=$(basename "$file" .md)
              echo "Converting $file..."
              
              # Convert to PDF
              pandoc "$file" \
                -f markdown \
                -t pdf \
                --pdf-engine=xelatex \
                -V geometry:margin=1in \
                -V lang=fr \
                -V documentclass=article \
                -V mainfont="Latin Modern Roman" \
                --standalone \
                --toc \
                -o "../results/pdf/${filename}.pdf"
              
              # Convert to DOCX
              pandoc "$file" \
                -f markdown \
                -t docx \
                --toc \
                -o "../results/word/${filename}.docx"
            fi
          done

      - name: List generated files
        run: |
          echo "Generated PDF files:"
          ls -l results/pdf/
          echo "Generated DOCX files:"
          ls -l results/word/

      - name: Upload PDF results
        uses: actions/upload-artifact@v4  # Mise à jour vers v4
        with:
          name: pdf-documents
          path: results/pdf/
          retention-days: 90  # Ajout d'une période de rétention

      - name: Upload WORD results
        uses: actions/upload-artifact@v4  # Mise à jour vers v4
        with:
          name: word-documents
          path: results/word/
          retention-days: 90  # Ajout d'une période de rétention
